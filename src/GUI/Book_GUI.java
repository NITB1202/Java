/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import BUS.AccountBUS;
import BUS.BookBUS;
import BUS.RolePermissionBUS;
import MyDesign.ScrollBar;
import java.awt.Color;
import java.util.Vector;

import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;

import BUS.StaffBUS;
import DTO.entities.Staff;
import DTO.entities.Account;
import DTO.entities.Book1;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;

import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;

import MyDesign.ScrollBar;
import java.awt.Color;
import java.util.Vector;

import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.GroupLayout.Alignment;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.GroupLayout;
import java.awt.Font;
import javax.swing.JButton;
import javax.swing.border.LineBorder;
import MyDesign.MyButton;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;


public class Book_GUI extends JPanel {
    private StaffBUS staffBUS;
    private BookBUS bookBUS=new BookBUS();
    int userID;
    String roleID;
    private Account userLogin;
    private RolePermissionBUS rolePermissionBUS;
    ArrayList<Book1> bookList = new ArrayList<>();
    AddBook_Dialog dialog;
    /**
     * Creates new form Staff_GUI
     */

    public Book_GUI(Account userLogin) throws Exception {
        initComponents();
        this.userLogin = userLogin;
        this.userID = userLogin.getPersonID();
        this.roleID = userLogin.getRoleID();
        this.rolePermissionBUS = new RolePermissionBUS();
        spTable.setVerticalScrollBar(new ScrollBar());
        spTable.getVerticalScrollBar().setBackground(Color.WHITE);
        spTable.getViewport().setBackground(Color.WHITE);
        setLayout(null);
        add(panelBorder1);
        panelBorder1.setLayout(null);
        panelBorder1.add(jLabel5);
        panelBorder1.add(panelBorder_Basic1);
        panelBorder_Basic1.setLayout(null);
        panelBorder_Basic1.add(txtTimKiem);
        panelBorder_Basic1.add(jLabel8);
        panelBorder1.add(spTable);
        
        btnThemSach = new MyDesign.MyButton();
        btnThemSach.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		try {
					themSach();
				} catch (ClassNotFoundException | SQLException | IOException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
        	}
        });
        btnThemSach.setForeground(new Color(255, 255, 255));
        btnThemSach.setColorOver(new Color(22, 113, 221));
        btnThemSach.setColor(new Color(22, 113, 221));
        btnThemSach.setBorderColor(new Color(22, 113, 221));
        btnThemSach.setBackground(new Color(22, 113, 221));
        btnThemSach.setIcon(new ImageIcon(Book_GUI.class.getResource("/Images/warehouse-white.png")));
        btnThemSach.setFont(new Font("Segoe UI", Font.BOLD, 18));
        btnThemSach.setBounds(583, 510, 162, 45);
        btnThemSach.setText("Thêm sách");
        panelBorder1.add(btnThemSach);
        loadAllBooks();
    }
    
   
   
    protected void themSach() throws ClassNotFoundException, SQLException, IOException 
    {
    	if(dialog == null || !dialog.isShowing())
    	{
    		dialog = new AddBook_Dialog(this);
    		dialog.setVisible(true);
    	}
	}



	/**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelBorder1 = new JPanel();
        panelBorder1.setBackground(new Color(255, 255, 255));
        panelBorder1.setBounds(20, 20, 776, 568);
        jLabel5 = new javax.swing.JLabel();
        jLabel5.setBounds(20, 27, 153, 26);
        spTable = new javax.swing.JScrollPane();
        spTable.setBounds(20, 77, 725, 417);
        tbSach = new MyDesign.MyTable();
        panelBorder_Basic1 = new JPanel();
        panelBorder_Basic1.setBorder(new LineBorder(new Color(128, 128, 128)));
        panelBorder_Basic1.setBackground(new Color(255, 255, 255));
        panelBorder_Basic1.setBounds(505, 20, 240, 39);
        jLabel8 = new javax.swing.JLabel();
        jLabel8.setBounds(206, 5, 24, 28);
        txtTimKiem = new MyDesign.SearchText();
        txtTimKiem.addKeyListener(new KeyAdapter() {
        	@Override
        	public void keyReleased(KeyEvent e) {
        		searchBook();
        	}
        });
        txtTimKiem.setHint("Tìm tên sách...");
        txtTimKiem.setBounds(10, 5, 192, 28);
        txtTimKiem.setFont(new Font("Segoe UI", Font.PLAIN, 13));

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel5.setFont(new Font("SansSerif", Font.BOLD, 20)); // NOI18N
        jLabel5.setForeground(new Color(0, 0, 0));
        jLabel5.setText("Danh sách Sách");

        spTable.setBorder(null);

        tbSach.setModel(new DefaultTableModel(
        	new Object[][] {
        	},
        	new String[] {
        		"STT", "ISBN", "T\u00EAn s\u00E1ch", "T\u00E1c gi\u1EA3", "Phi\u00EAn b\u1EA3n", "S\u1ED1 l\u01B0\u1EE3ng t\u1ED3n"
        	}) {
            boolean[] canEdit = new boolean [] {
                    false, false, false, false, false, false
                };

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit [columnIndex];
                }
            });
        tbSach.getColumnModel().getColumn(0).setPreferredWidth(30);
        tbSach.getColumnModel().getColumn(0).setMinWidth(30);
        tbSach.getColumnModel().getColumn(1).setPreferredWidth(100);
        tbSach.getColumnModel().getColumn(1).setMinWidth(100);
        tbSach.getColumnModel().getColumn(2).setPreferredWidth(190);
        tbSach.getColumnModel().getColumn(2).setMinWidth(190);
        tbSach.getColumnModel().getColumn(3).setPreferredWidth(135);
        tbSach.getColumnModel().getColumn(3).setMinWidth(135);
        tbSach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbSachMouseClicked(evt);
            }
        });
        spTable.setViewportView(tbSach);

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/search.png"))); // NOI18N
    }
    private void tbSachMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbSachMouseClicked
       if (rolePermissionBUS.hasPerView(roleID, 5)) {
           int row = tbSach.getSelectedRow();
            if (row >= 0) {
                try{
                    BookInfo_Dialog bookDia = new BookInfo_Dialog(new java.awt.Frame(),true,tbSach,bookList.get(row));
                    bookDia.setVisible(true);
                }catch(Exception ex){
                    Logger.getLogger(Book_GUI.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
        }
    }

    public void loadAllBooks(){
        try {
        	DefaultTableModel model =(DefaultTableModel) tbSach.getModel();
        	model.setRowCount(0);
        	
            bookList = bookBUS.getAllIncludeVersion();
            for(int i=0;i<bookList.size();i++){
            Book1 book=bookList.get(i);
            String isbn=book.getISBN();
            String name=book.getTenSach();
            String author=book.stringAuthor();
            String version=book.getVersion();
            int num=book.getStoreNum();
            Object row[] = {i+1,isbn,name,author,version,num};
            tbSach.addRow(row);
        }
        } catch (IOException | ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Book_GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
	protected void searchBook() {
		String searchText = txtTimKiem.getText().toLowerCase();
		//Clear table
		DefaultTableModel model = (DefaultTableModel) tbSach.getModel();
		model.setRowCount(0);
		
		if(!searchText.isBlank())
		{
			for(int i = 0; i < bookList.size(); i++)
			{
				Book1 book = bookList.get(i);
				String bookName = bookList.get(i).getTenSach().toLowerCase();
				if(bookName.contains(searchText))
					tbSach.addRow(new Object[] {i+1,book.getISBN(),book.getTenSach(),book.stringAuthor(),book.getVersion(),book.getStoreNum()} );
			}
		}
		else
			loadAllBooks();
	}
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private JPanel panelBorder1;
    private JPanel panelBorder_Basic1;
    private javax.swing.JScrollPane spTable;
    private MyDesign.MyTable tbSach;
    private MyDesign.SearchText txtTimKiem;
    private MyButton btnThemSach;
}
