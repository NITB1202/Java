/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package GUI;

import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.IOException;
import java.sql.SQLException;
import java.util.List;

import javax.swing.JOptionPane;

import BUS.AuthorBUS;
import BUS.CategoryBUS;
import BUS.PublisherBUS;
import DTO.entities.Author;
import javax.swing.JComboBox;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.LayoutStyle.ComponentPlacement;
import MyDesign.MyButton;
import java.awt.Color;
import java.awt.Font;


/**
 *
 * @author QUANG DIEN
 */
public class WareHouseAddReader_Dialog extends javax.swing.JDialog {
    String nameFrame;
    static String action;
    /**
     * Creates new form WareHouseAddReader_Dialog
     * @throws IOException
     * @throws SQLException
     * @throws ClassNotFoundException
     */
    public WareHouseAddReader_Dialog(java.awt.Frame parent,String nameFrame, String action ,boolean modal) throws ClassNotFoundException, SQLException, IOException {
        super(parent,nameFrame, modal);
        this.nameFrame = nameFrame;
        WareHouseAddReader_Dialog.action = action;
        setLocationRelativeTo(null);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() throws SQLException, IOException, ClassNotFoundException{

        panelBorder_Statistic_Blue1 = new MyDesign.PanelBorder_Statistic_Blue();
        panelBorder_Basic1 = new MyDesign.PanelBorder_Basic();
        jLabel8 = new javax.swing.JLabel();
        btnThemTacGia = new MyDesign.MyButton();
        btnLoadDuLieu = new MyDesign.MyButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel8.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        jLabel8.setText("Tên tác giả");
        
        author = new AuthorBUS();
        List<Author> authorList = author.getAllName();
        btnThemTacGia.setBackground(new java.awt.Color(22, 113, 221));
        btnThemTacGia.setForeground(new java.awt.Color(255, 255, 255));
        btnThemTacGia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/action-add-white.png"))); // NOI18N
        btnThemTacGia.setText("Thêm tác giả mới");
        btnThemTacGia.setBorderColor(new java.awt.Color(22, 113, 221));
        btnThemTacGia.setColor(new java.awt.Color(22, 113, 221));
        btnThemTacGia.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        ImageIcon webIcon =new javax.swing.ImageIcon(getClass().getResource("/Images/logo.png")); 
        setIconImage(webIcon.getImage());
        setTitle("Thêm tác giả");
        setSize(300, 200);
        setLocationRelativeTo(null);
        
        btnThemTacGia.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
            	WareHouseAddNewReader_Dialog r;
                try {
                    r = new WareHouseAddNewReader_Dialog(null, nameFrame,null, rootPaneCheckingEnabled);
                    r.setVisible(true);
                } catch (ClassNotFoundException | SQLException | IOException e1) {
                    // TODO Auto-generated catch block
                    e1.printStackTrace();
                }
            }
        });
        
        cbTgia.setBackground(new java.awt.Color(246, 250, 255));
        cbTgia.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
//        cbTacGia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tác giả" }));
        for(Author item : authorList)
        {
        	cbTgia.addItem(item.getName());
        }
        cbTgia.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(229, 229, 229)));
        cbTgia.setOpaque(true);
        cbTgia.setPreferredSize(new java.awt.Dimension(77, 28));
        
        cbTgia.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				String selectedValue = (String) cbTgia.getSelectedItem();
                if (selectedValue != null) {
                    whdialog.addToComboBox(selectedValue);
                    JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), "Thêm vào mục thành công!","Thông báo",JOptionPane.INFORMATION_MESSAGE);
                }
			}
		});
        
        btnLoadDuLieu.setText("Load dữ liệu");
        btnLoadDuLieu.setForeground(Color.WHITE);
        btnLoadDuLieu.setFont(new Font("SansSerif", Font.BOLD, 14));
        btnLoadDuLieu.setColor(new Color(22, 113, 221));
        btnLoadDuLieu.setBorderColor(new Color(22, 113, 221));
        btnLoadDuLieu.setBackground(new Color(22, 113, 221));
        
        btnLoadDuLieu.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				cbTgia.removeAllItems();
    			try {
					List<Author> authorList = au.getAllName();
					cbTgia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tác giả" }));
					for(Author item : authorList)
					{
						cbTgia.addItem(item.getName());
					}
				} catch (SQLException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
			}
		});
        
        javax.swing.GroupLayout panelBorder_Basic1Layout = new javax.swing.GroupLayout(panelBorder_Basic1);
        panelBorder_Basic1Layout.setHorizontalGroup(
        	panelBorder_Basic1Layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(panelBorder_Basic1Layout.createSequentialGroup()
        			.addGap(29)
        			.addGroup(panelBorder_Basic1Layout.createParallelGroup(Alignment.LEADING)
        				.addGroup(panelBorder_Basic1Layout.createSequentialGroup()
        					.addComponent(btnThemTacGia, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(btnLoadDuLieu, GroupLayout.PREFERRED_SIZE, 179, GroupLayout.PREFERRED_SIZE))
        				.addGroup(panelBorder_Basic1Layout.createSequentialGroup()
        					.addComponent(jLabel8)
        					.addGap(18)
        					.addComponent(cbTgia, 0, 262, Short.MAX_VALUE)))
        			.addContainerGap())
        );
        panelBorder_Basic1Layout.setVerticalGroup(
        	panelBorder_Basic1Layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(panelBorder_Basic1Layout.createSequentialGroup()
        			.addGap(28)
        			.addGroup(panelBorder_Basic1Layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jLabel8)
        				.addComponent(cbTgia, GroupLayout.PREFERRED_SIZE, 34, GroupLayout.PREFERRED_SIZE))
        			.addGap(18)
        			.addGroup(panelBorder_Basic1Layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(btnThemTacGia, GroupLayout.PREFERRED_SIZE, 40, GroupLayout.PREFERRED_SIZE)
        				.addComponent(btnLoadDuLieu, GroupLayout.PREFERRED_SIZE, 40, GroupLayout.PREFERRED_SIZE))
        			.addContainerGap(25, Short.MAX_VALUE))
        );
        panelBorder_Basic1.setLayout(panelBorder_Basic1Layout);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/nav-reader.png"))); // NOI18N
        jLabel4.setText("Thêm tác giả");

        javax.swing.GroupLayout panelBorder_Statistic_Blue1Layout = new javax.swing.GroupLayout(panelBorder_Statistic_Blue1);
        panelBorder_Statistic_Blue1.setLayout(panelBorder_Statistic_Blue1Layout);
        panelBorder_Statistic_Blue1Layout.setHorizontalGroup(
            panelBorder_Statistic_Blue1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder_Statistic_Blue1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBorder_Statistic_Blue1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelBorder_Basic1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelBorder_Statistic_Blue1Layout.setVerticalGroup(
            panelBorder_Statistic_Blue1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBorder_Statistic_Blue1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(panelBorder_Basic1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBorder_Statistic_Blue1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBorder_Statistic_Blue1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public String giatri()
    {
    	 String selectedValue = (String) cbTgia.getSelectedItem();
         // Kiểm tra nếu selectedValue không phải là null và không phải giá trị mặc định
         if (selectedValue != null && cbTgia.getSelectedIndex() > 0) {
             whdialog.addToComboBoxCheckTl(selectedValue);
         }
         return selectedValue;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WareHouseAddReader_Dialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WareHouseAddReader_Dialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WareHouseAddReader_Dialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WareHouseAddReader_Dialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                WareHouseAddReader_Dialog dialog;
                try {
                    dialog = new WareHouseAddReader_Dialog(new javax.swing.JFrame(), null ,action,true);
                    dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                        @Override
                        public void windowClosing(java.awt.event.WindowEvent e) {
                            System.exit(0);
                        }
                    });
                    dialog.setVisible(true);
                } catch (HeadlessException e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                } catch (ClassNotFoundException e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                } catch (SQLException e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                } catch (IOException e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                }
               
            }
        });
    }

    // Variables declaration - do not modify                     
    private MyDesign.MyButton btnThemTacGia;
    private MyDesign.MyButton btnLoadDuLieu;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private MyDesign.PanelBorder_Basic panelBorder_Basic1;
    private MyDesign.PanelBorder_Statistic_Blue panelBorder_Statistic_Blue1;
    private AuthorBUS author;
    protected JComboBox cbTgia = new JComboBox();
    private AuthorBUS au = new AuthorBUS();
    private WareHouseImport_Dialog whdialog = new WareHouseImport_Dialog(null, isDefaultLookAndFeelDecorated());
    private WareHouseAddNewReader_Dialog whnew;
}
