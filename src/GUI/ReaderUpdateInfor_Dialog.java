/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package GUI;

import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.temporal.ChronoUnit;
import java.util.Vector;

import javax.swing.JOptionPane;

import BUS.ReaderBUS;
import BUS.BorrowCardBUS;
import BUS.RolePermissionBUS;
import DTO.entities.Account;
import DTO.entities.Reader;
import DTO.entities.BorrowCard;
import java.util.ArrayList;
import java.awt.Toolkit;
import java.awt.Color;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.border.LineBorder;
import MyDesign.MyTextField_Basic;

/**
 *
 * @author QUANG DIEN
 */
public class ReaderUpdateInfor_Dialog extends javax.swing.JDialog {
	ReaderBUS readerBUS;
	Reader a;
    private Account user;
    private RolePermissionBUS rolePermissionBUS;
    private DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
    /**
     * Creates new form ReaderUpdateInfor_Dialog
     * @throws Exception 
     */
    public ReaderUpdateInfor_Dialog(Account user, java.awt.Frame parent, boolean modal,int id,MyDesign.MyTable tab) throws Exception {
        super(parent, modal);
        setIconImage(Toolkit.getDefaultToolkit().getImage(ReaderUpdateInfor_Dialog.class.getResource("/Images/logo.png")));
        setResizable(false);
        setTitle("Chi tiết độc giả");
        readerBUS =new ReaderBUS();
        this.user = user;
        this.rolePermissionBUS = new RolePermissionBUS();
        initComponents(tab,id);
        upInfo(id);
        if(rolePermissionBUS.hasPerEdit(user.getRoleID(), 6))
            btnSuaThongTin.setEnabled(true);
        else btnSuaThongTin.setEnabled(false);
        if(rolePermissionBUS.hasPerDelete(user.getRoleID(), 6))
            btnXoaDocGia.setEnabled(true);
        else btnXoaDocGia.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     * @throws Exception 
     */
    public void upInfo(int id) throws Exception {
        a=readerBUS.findbyID(id);
        txtTen.setText(a.getName());
        txtSoDienThoai.setText(a.getTel());
        txtDiaChi.setText(a.getAddress());
        DecimalFormat decimalFormat = new DecimalFormat("#,###");
        String formattedNumber = decimalFormat.format(a.getPenalty());
        txtTienPhat.setText(formattedNumber);
        LocalDate date = a.getFineDate();
        String fineDate = "Không có";
        if(date != null)
        	fineDate = date.format(formatter);
        txtHanNopPhat.setText(fineDate);
    }
    
    public void addDefault(MyDesign.MyTable tab) throws Exception{
    	tab.setRowCount(0);
        Vector<Reader> arr=readerBUS.getAll();
        for(int i=0;i<arr.size();i++){
            Reader acc=arr.get(i);
            int id=acc.getPersonID();
            String name=acc.getName();
            String tel=acc.getTel();
            String address=acc.getAddress();
            LocalDate fineDate=acc.getFineDate();
            String formatDate = "Không có";
            if(fineDate != null)
            		formatDate = fineDate.format(formatter);
            Object row[] = {i+1,id,name,tel,address,formatDate};
            tab.addRow(row);
        }
    }
    
    public boolean checkDataVal(String name,String tel,String address,int id) throws HeadlessException, FileNotFoundException, ClassNotFoundException, IOException, SQLException {
    	if(name.equals("")) {
    		JOptionPane.showMessageDialog(null,"Họ và tên không được để trống");
    		txtTen.requestFocus();
    		return false;
    	}
    	String nameReg = "^[\\p{L} \\.'\\-]+$";
    	if(!name.matches(nameReg)) {
    		JOptionPane.showMessageDialog(null,"Họ tên không hợp lệ");
    		txtTen.requestFocus();
    		return false;
    	}
    	if(tel.equals("")) {
    		JOptionPane.showMessageDialog(null,"Số điện thoại không được để trống");
    		txtSoDienThoai.requestFocus();
    		return false;
    	}
    	if(!readerBUS.checkTelExcept(tel,id)) {
    		JOptionPane.showMessageDialog(null,"Số điện thoại đã có trong dữ liệu");
    		txtSoDienThoai.requestFocus();
    		return false;
    	}
    	String telReg = "^0[1-9][0-9]{8}$";
    	if(!tel.matches(telReg)) {
    		JOptionPane.showMessageDialog(null,"Số điện thoại không hợp lệ");
    		txtSoDienThoai.requestFocus();
    		return false;
    	}
    	if(address.equals("")) {
    		JOptionPane.showMessageDialog(null,"Địa chỉ không được để trống");
    		txtDiaChi.requestFocus();
    		return false;
    	}
    	return true;
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents(MyDesign.MyTable tab,int id) {

        panelBorder_Statistic_Blue1 = new MyDesign.PanelBorder_Statistic_Blue();
        panelBorder_Basic1 = new MyDesign.PanelBorder_Basic();
        jLabel8 = new javax.swing.JLabel();
        txtTen = new MyDesign.MyTextField_Basic();
        jLabel9 = new javax.swing.JLabel();
        txtSoDienThoai = new MyDesign.MyTextField_Basic();
        jLabel10 = new javax.swing.JLabel();
        txtDiaChi = new MyDesign.MyTextField_Basic();
        btnSuaThongTin = new MyDesign.MyButton();
        btnSuaThongTin.setColorOver(new Color(22, 113, 221));
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel8.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel8.setText("Tên");

        txtTen.setBorder(new LineBorder(new Color(128, 128, 128)));

        jLabel9.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel9.setText("Số điện thoại");

        txtSoDienThoai.setBorder(new LineBorder(new Color(128, 128, 128)));

        jLabel10.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel10.setText("Địa chỉ");

        txtDiaChi.setBorder(new LineBorder(new Color(128, 128, 128)));

        btnSuaThongTin.setBackground(new java.awt.Color(22, 113, 221));
        btnSuaThongTin.setForeground(new java.awt.Color(255, 255, 255));
        btnSuaThongTin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/action-refresh-white.png"))); // NOI18N
        btnSuaThongTin.setText("Sửa thông tin");
        btnSuaThongTin.setBorderColor(new java.awt.Color(22, 113, 221));
        btnSuaThongTin.setColor(new java.awt.Color(22, 113, 221));
        btnSuaThongTin.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnSuaThongTin.addActionListener(new ActionListener() {
          	 @Override
             public void actionPerformed(ActionEvent e){
        		 	String name=txtTen.getText().trim();
        		    String tel=txtSoDienThoai.getText().trim();
        		    String address=txtDiaChi.getText().trim();
        		    try {
 						if(!a.compare(name, tel, address)) {
            	            int diaRS=JOptionPane.showOptionDialog(null, "Bạn có chắc muốn sửa độc giả này?", "Xác nhận", JOptionPane.YES_NO_OPTION, 
            	            		JOptionPane.QUESTION_MESSAGE, null,null,null);
 							if(diaRS==JOptionPane.YES_OPTION){
	 		 					if(checkDataVal(name,tel,address,a.getPersonID())) {
		 							a.setName(name);
		 							a.setTel(tel);
		 							a.setAddress(address);
		 							JOptionPane.showMessageDialog(null,readerBUS.updateOneReader(a),"Thông báo",JOptionPane.INFORMATION_MESSAGE);
		 							addDefault(tab);
		 							dispose();
	 		 					}
 							}
 						}
 				} catch (Exception e1) {
 					// TODO Auto-generated catch block
 					JOptionPane.showMessageDialog(null,e1.getMessage());
 				}
        	 }
        });
        btnXoaDocGia = new MyDesign.MyButton();
        btnXoaDocGia.setColorClick(new Color(255, 128, 128));
        
                btnXoaDocGia.setBackground(new Color(255, 204, 204));
                btnXoaDocGia.setForeground(new java.awt.Color(248, 67, 67));
                btnXoaDocGia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/action-delete-white.png"))); // NOI18N
                btnXoaDocGia.setText("Xóa độc giả");
                btnXoaDocGia.setBorderColor(new Color(255, 204, 204));
                btnXoaDocGia.setColor(new Color(255, 204, 204));
                btnXoaDocGia.setColorOver(new Color(255, 204, 204));
                btnXoaDocGia.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
                btnXoaDocGia.addActionListener(new ActionListener() {
                  	 @Override
                     public void actionPerformed(ActionEvent e){
                		try {
                			
                			LocalDate hanNop = a.getFineDate();
                			LocalDate homnay = LocalDate.now();
                			if(hanNop != null && hanNop.isAfter(homnay) && a.getPenalty()>0)
                			{
                				JOptionPane.showMessageDialog(null, "Không thể xóa độc giả đang còn nợ.","Lỗi",JOptionPane.ERROR_MESSAGE);
                				return;
                			}	
                			
                			BorrowCardBUS sBSBLL=new BorrowCardBUS();
                			Vector<BorrowCard> sBC=sBSBLL.getAll(a.getPersonID());
                			boolean key=true;
                			for(int i=0;i<sBC.size();i++) {
                				if(sBC.get(i).getRealReDate()==null) {
                					key=false;
                				}
                			}
                			if(sBC.size()==0 || key) {
                	            int diaRS=JOptionPane.showOptionDialog(null, "Bạn có chắc xoá độc giả này?", "Xác nhận", JOptionPane.YES_NO_OPTION, 
                	            		JOptionPane.QUESTION_MESSAGE, null,null,null);
						if(diaRS==JOptionPane.YES_OPTION){
							JOptionPane.showMessageDialog(null,readerBUS.eraShowReader(a),"Thông báo",JOptionPane.INFORMATION_MESSAGE);
 							addDefault(tab);
 							dispose();
						}
                			}else {
                				JOptionPane.showMessageDialog(null,"Không thể xoá độc giả này vì chưa trả sách !");
                			}
 				} catch (Exception e1) {
 					// TODO Auto-generated catch block
 					JOptionPane.showMessageDialog(null,e1.getMessage());
 				}
                }});
        
        lblNewLabel = new JLabel("Tiền phạt");
        lblNewLabel.setFont(new Font("SansSerif", Font.BOLD, 14));
        
        lblNewLabel_1 = new JLabel("Hạn nộp phạt");
        lblNewLabel_1.setFont(new Font("SansSerif", Font.BOLD, 14));
        jLabel1 = new javax.swing.JLabel();
        
        
                jLabel1.setForeground(new java.awt.Color(51, 51, 51));
                jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/info-history.png"))); // NOI18N
                jLabel1.setText("Lịch sử mượn sách");
                jLabel1.addMouseListener(new MouseAdapter() {
                    @Override
                    public void mouseClicked(MouseEvent e) {
                    	ReaderHistoryDone_Dialog whid = new ReaderHistoryDone_Dialog(new javax.swing.JFrame(), true,id);
                    	whid.setVisible(true);
                    }
                });
        
        txtTienPhat = new MyTextField_Basic();
        txtTienPhat.setEditable(false);
        txtTienPhat.setText((String) null);
        txtTienPhat.setBorder(new LineBorder(new Color(128, 128, 128)));
        
        txtHanNopPhat = new MyTextField_Basic();
        txtHanNopPhat.setEditable(false);
        txtHanNopPhat.setText((String) null);
        txtHanNopPhat.setBorder(new LineBorder(new Color(128, 128, 128)));

        javax.swing.GroupLayout panelBorder_Basic1Layout = new javax.swing.GroupLayout(panelBorder_Basic1);
        panelBorder_Basic1Layout.setHorizontalGroup(
        	panelBorder_Basic1Layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(panelBorder_Basic1Layout.createSequentialGroup()
        			.addGap(22)
        			.addGroup(panelBorder_Basic1Layout.createParallelGroup(Alignment.LEADING)
        				.addGroup(panelBorder_Basic1Layout.createSequentialGroup()
        					.addPreferredGap(ComponentPlacement.RELATED, 3, Short.MAX_VALUE)
        					.addGroup(panelBorder_Basic1Layout.createParallelGroup(Alignment.LEADING)
        						.addComponent(jLabel8)
        						.addComponent(jLabel9)
        						.addComponent(jLabel10)
        						.addComponent(lblNewLabel)
        						.addComponent(lblNewLabel_1))
        					.addGap(44)
        					.addGroup(panelBorder_Basic1Layout.createParallelGroup(Alignment.LEADING)
        						.addGroup(panelBorder_Basic1Layout.createParallelGroup(Alignment.LEADING)
        							.addGroup(panelBorder_Basic1Layout.createSequentialGroup()
        								.addGroup(panelBorder_Basic1Layout.createParallelGroup(Alignment.TRAILING)
        									.addComponent(txtSoDienThoai, GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
        									.addComponent(txtTen, GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
        									.addComponent(txtDiaChi, GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE))
        								.addGap(28))
        							.addGroup(panelBorder_Basic1Layout.createSequentialGroup()
        								.addComponent(txtTienPhat, GroupLayout.PREFERRED_SIZE, 160, GroupLayout.PREFERRED_SIZE)
        								.addContainerGap()))
        						.addGroup(panelBorder_Basic1Layout.createSequentialGroup()
        							.addComponent(txtHanNopPhat, GroupLayout.PREFERRED_SIZE, 160, GroupLayout.PREFERRED_SIZE)
        							.addContainerGap())))
        				.addGroup(panelBorder_Basic1Layout.createSequentialGroup()
        					.addGroup(panelBorder_Basic1Layout.createParallelGroup(Alignment.LEADING)
        						.addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 300, GroupLayout.PREFERRED_SIZE)
        						.addGroup(panelBorder_Basic1Layout.createSequentialGroup()
        							.addPreferredGap(ComponentPlacement.RELATED)
        							.addComponent(btnXoaDocGia, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        							.addGap(18)
        							.addComponent(btnSuaThongTin, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
        					.addContainerGap(20, Short.MAX_VALUE))))
        );
        panelBorder_Basic1Layout.setVerticalGroup(
        	panelBorder_Basic1Layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(panelBorder_Basic1Layout.createSequentialGroup()
        			.addGap(17)
        			.addGroup(panelBorder_Basic1Layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(txtTen, GroupLayout.PREFERRED_SIZE, 29, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jLabel8))
        			.addPreferredGap(ComponentPlacement.UNRELATED)
        			.addGroup(panelBorder_Basic1Layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(txtSoDienThoai, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jLabel9))
        			.addPreferredGap(ComponentPlacement.UNRELATED)
        			.addGroup(panelBorder_Basic1Layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(txtDiaChi, GroupLayout.PREFERRED_SIZE, 29, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jLabel10))
        			.addPreferredGap(ComponentPlacement.UNRELATED)
        			.addGroup(panelBorder_Basic1Layout.createParallelGroup(Alignment.TRAILING)
        				.addComponent(txtTienPhat, GroupLayout.PREFERRED_SIZE, 29, GroupLayout.PREFERRED_SIZE)
        				.addComponent(lblNewLabel))
        			.addPreferredGap(ComponentPlacement.UNRELATED)
        			.addGroup(panelBorder_Basic1Layout.createParallelGroup(Alignment.TRAILING)
        				.addComponent(txtHanNopPhat, GroupLayout.PREFERRED_SIZE, 29, GroupLayout.PREFERRED_SIZE)
        				.addComponent(lblNewLabel_1))
        			.addPreferredGap(ComponentPlacement.UNRELATED)
        			.addGroup(panelBorder_Basic1Layout.createParallelGroup(Alignment.LEADING)
        				.addComponent(btnSuaThongTin, GroupLayout.PREFERRED_SIZE, 40, GroupLayout.PREFERRED_SIZE)
        				.addComponent(btnXoaDocGia, GroupLayout.PREFERRED_SIZE, 40, GroupLayout.PREFERRED_SIZE))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(jLabel1)
        			.addContainerGap())
        );
        panelBorder_Basic1.setLayout(panelBorder_Basic1Layout);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/nav-reader.png"))); // NOI18N
        jLabel3.setText("Thông tin chi tiết");

        javax.swing.GroupLayout panelBorder_Statistic_Blue1Layout = new javax.swing.GroupLayout(panelBorder_Statistic_Blue1);
        panelBorder_Statistic_Blue1Layout.setHorizontalGroup(
        	panelBorder_Statistic_Blue1Layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(Alignment.TRAILING, panelBorder_Statistic_Blue1Layout.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(panelBorder_Statistic_Blue1Layout.createParallelGroup(Alignment.TRAILING)
        				.addComponent(panelBorder_Basic1, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        				.addComponent(jLabel3, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 349, Short.MAX_VALUE))
        			.addContainerGap())
        );
        panelBorder_Statistic_Blue1Layout.setVerticalGroup(
        	panelBorder_Statistic_Blue1Layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(panelBorder_Statistic_Blue1Layout.createSequentialGroup()
        			.addContainerGap()
        			.addComponent(jLabel3, GroupLayout.PREFERRED_SIZE, 38, GroupLayout.PREFERRED_SIZE)
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(panelBorder_Basic1, GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
        			.addContainerGap())
        );
        panelBorder_Statistic_Blue1.setLayout(panelBorder_Statistic_Blue1Layout);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBorder_Statistic_Blue1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBorder_Statistic_Blue1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReaderUpdateInfor_Dialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReaderUpdateInfor_Dialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReaderUpdateInfor_Dialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReaderUpdateInfor_Dialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                ReaderUpdateInfor_Dialog dialog = new ReaderUpdateInfor_Dialog(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private MyDesign.MyButton btnSuaThongTin;
    private MyDesign.MyButton btnXoaDocGia;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private MyDesign.PanelBorder_Basic panelBorder_Basic1;
    private MyDesign.PanelBorder_Statistic_Blue panelBorder_Statistic_Blue1;
    private MyDesign.MyTextField_Basic txtDiaChi;
    private MyDesign.MyTextField_Basic txtSoDienThoai;
    private MyDesign.MyTextField_Basic txtTen;
    private JLabel lblNewLabel;
    private JLabel lblNewLabel_1;
    private MyTextField_Basic txtTienPhat;
    private MyTextField_Basic txtHanNopPhat;
}
