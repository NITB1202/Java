package GUI;

import java.awt.Color;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;

import BUS.RoleBUS;
import BUS.RolePermissionBUS;
import BUS.StaffBUS;
import DTO.entities.Account;
import DTO.entities.Role;
import DTO.entities.Staff;
import MyDesign.ScrollBar;
import javax.swing.JList;
import javax.swing.GroupLayout.Alignment;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.DefaultComboBoxModel;
import javax.swing.GroupLayout;
import javax.swing.JComboBox;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class Staff_GUI extends JPanel {

	private static final long serialVersionUID = 1L;

	private StaffBUS staffBUS;
    int userID;
    String roleID;
    private Account userLogin;
    private RolePermissionBUS rolePermissionBUS;
    /**
     * Creates new form Staff_GUI
     */

    public Staff_GUI(Account userLogin) throws Exception {
        initComponents();
        this.userLogin = userLogin;
        this.userID = userLogin.getPersonID();
        this.roleID = userLogin.getRoleID();
        this.rolePermissionBUS = new RolePermissionBUS();
        spTable.setVerticalScrollBar(new ScrollBar());
        spTable.getVerticalScrollBar().setBackground(Color.WHITE);
        spTable.getViewport().setBackground(Color.WHITE);
        try{
            staffBUS =new StaffBUS();
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null,ex.getMessage());
        }
        if(this.roleID.equals("AD")) {
            addDefaultAD();
        }
        if(this.roleID.equals("QL")) {
                addDefaultQL();
        }
        JPanel p = new JPanel();
        p.setBackground(Color.WHITE);
        spTable.setCorner(JScrollPane.UPPER_RIGHT_CORNER, p);
        SelectedRole = "Tất cả";
        loadRole(userLogin.getRoleID());
        if(rolePermissionBUS.hasPerCreate(roleID, 8))
            btnNhanVienMoi.setEnabled(true);
        else  btnNhanVienMoi.setEnabled(false);
        
    }
    
    public void addDefaultAD() throws Exception{
        Vector<Account> arr = staffBUS.getAllAD();
        System.out.println(arr);
        for(int i=0;i<arr.size();i++){
            Account acc = arr.get(i);
            int id=acc.getPersonID();
            String name=acc.getName();
            String tel=acc.getTel();
            String address=acc.getAddress();
            String username=acc.getUsername();
            String role=acc.getRoleID();
            Object row[] = {i+1,id,name,username,role,tel,address};
            tbDanhSachNhanVien.addRow(row);
        }
    }
    
    public void addDefaultQL() throws Exception{
        Vector<Account> arr= staffBUS.getAllQL();
        System.out.println(arr);
        for(int i=0;i<arr.size();i++){
            Account acc = arr.get(i);
            int id=acc.getPersonID();
            String name=acc.getName();
            String tel=acc.getTel();
            String address=acc.getAddress();
            String username=acc.getUsername();
            String role=acc.getRoleID();
            Object row[] = {i+1,id,name,username,role,tel,address};
            tbDanhSachNhanVien.addRow(row);}
    }
    
    public void findVal(String str,String roleID) throws Exception {
    	Vector<Account> arr=new Vector<Account>();
    	if(roleID.equals("AD")) {
    		arr=staffBUS.allOutSearchAD(str);
    	}
    	if(roleID.equals("QL")) {
    		arr=staffBUS.allOutSearchQL(str);
    	}
    	if(arr.size()==0) {
    		JOptionPane.showMessageDialog(null,"Không tìm thấy nhân viên theo yêu cầu");
    		return;
    	}
    	tbDanhSachNhanVien.setRowCount(0);
    	for(int i=0;i<arr.size();i++){
    		Account acc=arr.get(i);
            int id=acc.getPersonID();
            String name=acc.getName();
            String tel=acc.getTel();
            String address=acc.getAddress();
            String username=acc.getUsername();
            String role=acc.getRoleID();
            Object row[] = {i+1,id,name,username,role,tel,address};
            tbDanhSachNhanVien.addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelBorder1 = new MyDesign.PanelBorder();
        jLabel5 = new javax.swing.JLabel();
        spTable = new javax.swing.JScrollPane();
        tbDanhSachNhanVien = new MyDesign.MyTable();
        panelBorder_Basic1 = new MyDesign.PanelBorder_Basic();
        jLabel8 = new javax.swing.JLabel();
        txtTimKiem = new MyDesign.SearchText();
        btnNhanVienMoi = new MyDesign.MyButton();
        setBackground(new java.awt.Color(255, 255, 255));

        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(127, 127, 127));
        jLabel5.setText("Danh sách nhân viên");

        spTable.setBorder(null);

        tbDanhSachNhanVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã NV", "Tên NV", "Username", "Chức vụ", "Số điện thoại", "Địa chỉ"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbDanhSachNhanVien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbDanhSachNhanVienMouseClicked(evt);
            }
        });
        spTable.setViewportView(tbDanhSachNhanVien);

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/search.png"))); // NOI18N

        txtTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimKiemActionPerformed(evt);
            }
        });
        CbFilter = new JComboBox<String>();
        CbFilter.setModel(new DefaultComboBoxModel<>(new String[] {"Tất cả"}));
        CbFilter.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                	SelectedRole = (String) CbFilter.getSelectedItem();
                	if (SelectedRole == null) {
                		SelectedRole = "Tất cả";
                	}
                    filterStaffByRole(roleID, SelectedRole);
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, ex.getMessage());
                }
            }
        });
        

        javax.swing.GroupLayout panelBorder_Basic1Layout = new javax.swing.GroupLayout(panelBorder_Basic1);
        panelBorder_Basic1.setLayout(panelBorder_Basic1Layout);
        panelBorder_Basic1Layout.setHorizontalGroup(
            panelBorder_Basic1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBorder_Basic1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelBorder_Basic1Layout.setVerticalGroup(
            panelBorder_Basic1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder_Basic1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBorder_Basic1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBorder_Basic1Layout.createSequentialGroup()
                        .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        btnNhanVienMoi.setBackground(new java.awt.Color(22, 113, 221));
        btnNhanVienMoi.setForeground(new java.awt.Color(255, 255, 255));
        btnNhanVienMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/action-add-white.png"))); // NOI18N
        btnNhanVienMoi.setText("Nhân viên mới");
        btnNhanVienMoi.setToolTipText("");
        btnNhanVienMoi.setBorderColor(new java.awt.Color(22, 113, 221));
        btnNhanVienMoi.setColor(new java.awt.Color(22, 113, 221));
        btnNhanVienMoi.setColorClick(new java.awt.Color(153, 204, 255));
        btnNhanVienMoi.setColorOver(new java.awt.Color(22, 113, 221));
        btnNhanVienMoi.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btnNhanVienMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNhanVienMoiActionPerformed(evt);
            }
        });
        
        
        
        


        javax.swing.GroupLayout panelBorder1Layout = new javax.swing.GroupLayout(panelBorder1);
        panelBorder1Layout.setHorizontalGroup(
        	panelBorder1Layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(panelBorder1Layout.createSequentialGroup()
        			.addGap(20)
        			.addGroup(panelBorder1Layout.createParallelGroup(Alignment.TRAILING)
        				.addGroup(panelBorder1Layout.createParallelGroup(Alignment.TRAILING, false)
        					.addGroup(panelBorder1Layout.createSequentialGroup()
        						.addComponent(jLabel5, GroupLayout.PREFERRED_SIZE, 171, GroupLayout.PREFERRED_SIZE)
        						.addGap(158)
        						.addComponent(CbFilter, GroupLayout.PREFERRED_SIZE, 93, GroupLayout.PREFERRED_SIZE)
        						.addPreferredGap(ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        						.addComponent(panelBorder_Basic1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        					.addComponent(spTable, GroupLayout.PREFERRED_SIZE, 688, GroupLayout.PREFERRED_SIZE))
        				.addComponent(btnNhanVienMoi, GroupLayout.PREFERRED_SIZE, 145, GroupLayout.PREFERRED_SIZE))
        			.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelBorder1Layout.setVerticalGroup(
        	panelBorder1Layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(panelBorder1Layout.createSequentialGroup()
        			.addContainerGap(61, Short.MAX_VALUE)
        			.addGroup(panelBorder1Layout.createParallelGroup(Alignment.LEADING, false)
        				.addComponent(CbFilter)
        				.addComponent(panelBorder_Basic1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        				.addComponent(jLabel5, Alignment.TRAILING))
        			.addGap(10)
        			.addComponent(spTable, GroupLayout.PREFERRED_SIZE, 400, GroupLayout.PREFERRED_SIZE)
        			.addPreferredGap(ComponentPlacement.UNRELATED)
        			.addComponent(btnNhanVienMoi, GroupLayout.PREFERRED_SIZE, 36, GroupLayout.PREFERRED_SIZE)
        			.addGap(14))
        );
        panelBorder1.setLayout(panelBorder1Layout);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelBorder1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelBorder1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void filterStaffByRole(String roleID, String selectedRole) {
        try {
            Vector<Account> arr = staffBUS.getAllQL();
            tbDanhSachNhanVien.setRowCount(0);

            for (int i = 0; i < arr.size(); i++) {
                Account acc = arr.get(i);
                int id = acc.getPersonID();
                String name = acc.getName();
                String tel = acc.getTel();
                String address = acc.getAddress();
                String username = acc.getUsername();
                String role = acc.getRoleID();

                if (selectedRole.equals(role) || selectedRole.equals("Tất cả")) {
                    Object row[] = {i + 1, id, name, username, role, tel, address};
                    tbDanhSachNhanVien.addRow(row);
                }
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }

	private void loadRole(String roleID) {
	        DefaultComboBoxModel<String> model = (DefaultComboBoxModel<String>) CbFilter.getModel();
	        try {
                model = (DefaultComboBoxModel<String>) CbFilter.getModel();
                model.removeAllElements();
                model.addElement("Tất cả");
            	model.addAll(staffBUS.getRoleAD());
            } catch (Exception e) {
                    // TODO Auto-generated catch block
                    JOptionPane.showMessageDialog(null,e.getMessage());
            }
            CbFilter.revalidate();
            CbFilter.repaint();
	}

	private void tbDanhSachNhanVienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbDanhSachNhanVienMouseClicked
       if (evt.getClickCount() == 2 && rolePermissionBUS.hasPerView(roleID, 7)) {
            int row = tbDanhSachNhanVien.getSelectedRow();
            if (row >= 0) {
                String cellValue = tbDanhSachNhanVien.getValueAt(row, 1).toString();
                int cellVal=Integer.parseInt(cellValue);
                try {
                        StaffInfor_Dialog ruid=new StaffInfor_Dialog(new javax.swing.JFrame(), true,cellVal,tbDanhSachNhanVien,roleID,userID);
                        ruid.setVisible(true);
                }catch(Exception ex) {
                        JOptionPane.showMessageDialog(null,ex.getMessage());
                }
            }
        }
    }//GEN-LAST:event_tbDanhSachNhanVienMouseClicked

    private void txtTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimKiemActionPerformed
        String text = txtTimKiem.getText().trim();
        try {
            findVal(text,roleID);
        } catch (Exception e1) {
                // TODO Auto-generated catch block
                JOptionPane.showMessageDialog(null,e1.getMessage());
        }
    }//GEN-LAST:event_txtTimKiemActionPerformed

    private void btnNhanVienMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNhanVienMoiActionPerformed
        try {
            StaffAdd_Dialog sad=new StaffAdd_Dialog(this.userLogin ,new javax.swing.JFrame(), true,tbDanhSachNhanVien);
            sad.setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(Staff_GUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Staff_GUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Staff_GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnNhanVienMoiActionPerformed

    	// Variables declaration - do not modify//GEN-BEGIN:variables
    private MyDesign.MyButton btnNhanVienMoi;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private MyDesign.PanelBorder panelBorder1;
    private MyDesign.PanelBorder_Basic panelBorder_Basic1;
    private javax.swing.JScrollPane spTable;
    private MyDesign.MyTable tbDanhSachNhanVien;
    private MyDesign.SearchText txtTimKiem;
    private JComboBox<String> CbFilter;
    private String SelectedRole;
}
